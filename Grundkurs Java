%TAGS: Rezension, Buch, Programmieren, Java
%Kategorie: Rezension
% keine Webseite
Rezension: Grundkurs Programmieren in Java
Christian Schnell

Mit ihrem Buch „Grundkurs Programmieren in Java“{http://www.hanser-fachbuch.de/buch/Grundkurs+Programmieren+in+Java/9783446440739} bieten die Autoren Programmieranfängern einen guten und soliden Einstieg in die Java-Programmierung. Durch zahlreiche Übungsaufgaben wendet man Gelerntes direkt an und entwickelt es im Rahmen des Buches weiter. 

ReziDank: Hanser

A1. Zielgruppe
Die Autoren möchten mit ihrem Buch vor allem Schülern, Studenten und auch „Hausfrauen und Hausmännern“, die bisher noch keine Programmiererfahrung haben, das Programmieren in Java beibringen. Das Buch dient unter anderem als Begleitmaterial für Bachelor-Studiengänge. Es wird nicht zu tief in theoretische Informatik-Grundlagen eingestiegen, so dass die Autoren ihrem Anspruch auch gerecht werden. 

A1. Inhalt
Das Buch teilt sich in fünf große Teile auf. Vor dem ersten Teil finden sich noch zwei einleitende Kapitel. 
Das erste davon dient als Einleitung in der die Autoren ihre Ideen zur Entwicklung und zum Aufbau des Buches darstellen. Ein Link auf die Webseite zum Buch mit weiteren Informationen, Beispielprogrammen und ergänzenden Materialien fehlt auch nicht. Nachdem im zweiten Kapitel grundlegende Computer- und Programmiergrundbegriffe eingeführt werden, beginnt der erste Teil des Buches, der aus vier Kapiteln besteht. 

A1.1. Teil I: Einstieg in das Programmieren mit Java
Im ersten dieser Kapitel wird anhand eines kleinen Rechenprogramms der grundlegende Aufbau von Java-Programmen erklärt. Anschließend überspringen die Autoren im Buch meiner Meinung nach einen wichtigen Schritt für Anfänger: Für die korrekte Installation von Java und der weiteren benötigten Software verweisen die Autoren auf die Homepage des Buches. Dort finden sich in der Tat Links und Video-Anleitungen für die Installation von Java und den im Buch verwendeten Programmen für Windows 8 und Mac OS X, aber zum Beispiel fehlen Hinweise auf das Setzen der Umgebungsvariablen. Dies erschwert den Einstieg für Anfänger natürlich. Im Buch geht es anschließend mit einer detaillierten Anleitung zum Übersetzen und Ausführen des Rechenprogramms. Abgeschlossen wird das Kapitel von drei kleinen Übungsaufgaben. Über die Entscheidung, die Installationsanleitung selbst nicht mit ins Buch aufzunehmen, kann man wohl geteilter Meinung sein, ansonsten stellt das Kapitel aber einen guten Einstieg dar. 

Im vierten Kapitel werden die üblichen Grundlagen von Java-Programmen erklärt. Dazu zählen Kommentare, Bezeichner und Namen, Operatoren, der grundsätzliche Programmaufbau, Datentypen, Ausdrücke, Schleifen, if-Anweisungen usw. Auch wenn es im Prinzip eine Auflistung der verschiedenen Bestandteile mit beschreibenden Absätzen ist, fällt diese sehr übersichtlich aus und ist gut mit Beispielen zum besseren Verständnis ausgestattet. Nach jedem Abschnitt findet sich wie im Rest des Buches auch eine Zusammenfassung und reichlich Übungsaufgaben (die Lösungen dazu gibt es auf der Homepage zum Buch), die das Gelesene festigen und vertiefen. Auch dadurch liest sich dieser Teil des Buches nicht so langweilig wie in vielen anderen Büchern.

Kapitel fünf behandelt das Thema Referenzdatentypen. Die Autoren steigen in dieses Thema mit einem Terminkalender als anschaulichem Beispiel dafür ein, welchen Vorteil diese Datentypen haben. Als erstes werden eindimensionale Arrays genauer erklärt. Der Terminkalender taucht im weiteren Verlauf des Kapitels wieder auf und wird mit dem neu gelernten Wissen verbessert und zum Beispiel unter Verwendung mehrdimensionaler Arrays umgesetzt. Auch im nächsten Abschnitt wird der Terminkalender mit Einführung des Klassen-Konzepts zur Adressverwaltung weiterentwickelt. Insgesamt ein sehr gutes Kapitel – die für Anfänger häufig schwierigen Themen Arrays und Klassen sind anschaulich und gut nachvollziehbar erklärt. 

In Kapitel sechs werden Methoden eingeführt und deren Verwendung an einer mathematischen Berechnungen erklärt. Der Beginner lernt unter anderem den grundsätzlichen Aufbau einer Methode, was es mit „call by value“ oder „call by reference“ auf sich hat und wie man Methoden überlädt. Es folgt ein Abschnitt über rekursiv definierte Methoden, in dem auch ihre möglichen Probleme und Nachteile demonstriert werden. Die weiteren Abschnitte dieses Kapitels behandeln die main-Methode, das Aufrufen von Methoden aus anderen Klassen und von Objekten, verbunden mit der Demonstration weiterer Methoden der Klasse String. Dieses Kapitel stellt eine gute Überleitung zum nächsten Teil des Buches dar, in dem es um Objektorientierung geht. 

A1.1. Teil II: Objektorientiertes Programmieren in Java

Das erste Kapitel dieses Teil behandelt die Grundlagen und gibt Einblicke in die „philosophischen Grundlagen“ der Objektorientierung. Der Einstieg erfolgt mit einem Vergleich zwischen dem bisher verfolgten Konzept der imperativen Programmierung und der nun zu lernenden objektorientierten Programmierung. Anschließend werden die vier Grundpfeiler Generalisierung, Vererbung, Kapselung und Polymorphismus erläutert. Auch hier werden die Konzepte schlüssig und mit anschaulichen Analogien erklärt. Die Autoren werfen anschließend noch einen kurzen Blick auf UML-Diagramme und Entwurfsmuster. Dies dient aber nur dazu, dass man als Anfänger weiß, was es mit diesen Dingen auf sich hat und die Autoren verweisen ansonsten auf weitere Literatur. 
In Kapitel acht wird die grundlegende Umsetzung der zuvor besprochenen Konzepte in Java-Programmen beschrieben. Dies erfolgt anhand einer Klasse Student, die immer weiter in Übereinstimmung mit der objektorientierten Programmierung angepasst wird. Dies beinhaltet das korrekte Setzen der Sichtbarkeit, die Einführung der set- und get-Methoden, Klassen- und Instanzvariablen, Initialisierung und so weiter. Im neunten Kapitel vertiefen die Autoren die Themen Vererbung und Polymorphismus. In diesem Zusammenhang werden unter anderem die Themen abstrakte Klassen, super-Referenzen, Interfaces und dynamisches Binden auch wieder mit Übungsaufgaben vertieft. Die einzelnen Abschnitte stehen hier nicht nur nebeneinander, sondern werden auch miteinander verknüpft, so dass die Konzepte und Beispiele aus unterschiedlichen Blickpunkten betrachtet und dadurch auch besser nachvollziehbar werden. Im nächsten Kapitel geht es weiter mit Exceptions und Errors. Zunächst werden mithilfe von Beispielen die Grundlagen mit throws, catch und try gelegt. Danach wird noch kurz auf selbst-definierte Exceptions, den finally-Block, Error-Subklassen und Assertions eingegangen. Die letzten beiden Kapitel des Abschnitts Objektorientierung gehen noch auf fortgeschrittene Themen ein. Es werden zum Beispiel Aufzählungstypen, generische Datentypen und Hilfsklassen wie StringBuffer oder die Collection-Klassen behandelt.

A1.1. Teil III: Grafische Oberflächen in Java
Dieser Teil besteht aus fünf Kapiteln auf ca. 140 Seiten. Zunächst erhält der Leser eine Einführung in grafische Benutzeroberflächen und die verschiedenen Klassen, aus denen sie zusammengesetzt werden können. Nachdem der Zusammenhang zwischen der AWT- und der Swing-Klassenbibliothek erklärt wurde, werden in Kapitel 14 hauptsächlich die einzelnen Swing-Komponenten detaillierter eingeführt und mit kurzen Anwendungsbeispielen gezeigt, wobei in der Hierarchie ganz oben mit der abstrakten Klasse Component angefangen wird. Auf die Layout-Manager wird dabei ebenfalls eingegangen. Im letzten Abschnitt folgen noch einige weitere Klassen, mit denen zum Beispiel Menüleisten oder Dialogfenster erzeugt werden können, so dass man am Ende dieses Kapitels die grundlegenden Komponenten für die Programmierung von grafischen Benutzeroberflächen in Java kennt. Danach lernt man in Kapitel 15 die einzelnen Elemente mit Leben zu versehen. Das Kapitel beginnt mit zwei einfachen Beispielen, die die Grundideen des delegation event model sehr gut veranschaulichen. Im weiteren Verlauf werden Event-Klassen und Listener-Interfaces aufgelistet und mit einer kurzen Erklärung versehen. Auch lernt man hier den Vorteil von Adapterklassen kennen. Als Anwendungsbeispiel wird am Ende des Kapitels ein Stoppuhr-Programm programmiert, in dem das gesammelte Wissen angewendet wird. Der Quellcode ist im Buch abgedruckt, lässt sich aber leider wieder nicht rauskopieren (aus dem E-Book).
Im nächsten Kapitel stellen die Autoren zunächst dar, wie man in Swing-Komponenten auch zeichnen kann, so dass man seine grafische Benutzeroberfläche über die vorhandenen Standard-Komponenten hinaus individuell und flexibler gestalten kann. 
Das folgende Kapitel über Applets geht auf die Unterschiede zwischen Programmen und Applets ein und beschreibt, wie man Java-Applets in HTML-Seiten einbettet. Man erfährt zwar alles Nötige über die Programmierung selbst, allerdings wurden einige Aspekte, die darüber hinaus noch wichtig sein können, wenn überhaupt nur am Rande erwähnt, wie zum Beispiel Sicherheitsaspekte, die Abhängigkeit von der korrekten JRE usw. 

A1.1. Teil IV: Threads, Datenströme und Netzwerkanwendungen
Die bisher im Buch beschriebenen Programme hatte einen sehr einfachen Programmablauf. Die Erzeugung komplexerer Programme wird auf den folgenden ca. 85 Seiten in drei Kapiteln gelehrt. Das Kapitel über Threads bietet einen guten Überblick. Die Grundlagen werden gut erklärt und durch anschauliche (wenn auch eher praxisferne) Beispiele werden mögliche Probleme und Konflikte zwischen Threads anschaulich gemacht und Lösungen aufgezeigt. Das 19. Kapitel gibt einen guten Überblick über die Benutzung von Ein- und Ausgabeströmen in Java. Die File-Klasse für die Bearbeitung von Verzeichnissen und Dateien wird erklärt und verschiedene weitere Klassen, die im Zusammenhang mit dem Auslesen und Schreiben von Texten wichtig sind. 

Im letzten regulären Kapitel des Buches geht es um Client- und Serverprogrammierung in Netzwerken. Dieses Thema wird im Rahmen des Buches natürlich nicht erschöpfend behandelt, aber der Leser erhält nach einer allgemeinen Einführung in Netzwerk-Kommunikation einen guten Überblick über die von Java bereitgestellten Klassen für diesen Bereich.

A1.1. Anhang
Der Anhang des Buches ist sehr umfangreich und bietet zunächst Kapitel über die Neuerungen in den Java-Versionen 7 und 8, gefolgt von einem Blick über den Tellerrand mit Ratschlägen und Hinweisen zu Tools und Programmen, die einem Programmierer das Leben deutlich vereinfachen können. Glossar, Literatur- und ein gut geordnetes Stichwortverzeichnis fehlen auch nicht.

A1. Stil
Der Schreibstil der Autoren ist eher sachlich und nüchtern, wobei man als Leser durch Fragen und bei Verweisen auf die API-Spezifikation immer wieder direkt angesprochen wird. Man kann den Autoren sehr gut folgen und Fachbegriffe und Abkürzungen werden gut erklärt, bevor sie im weiteren Verlauf benutzt werden. 

A1. Fazit
Insgesamt kann Java-Anfängern das Buch empfohlen werden. Das Niveau startet für Anfänger angemessen, steigt aber schnell an, so dass man viel lernen kann. Einige (fortgeschrittene) Themen, wie zum Beispiel Datenbankprogrammierung werden im Buch nicht behandelt, aber nach dem Durcharbeiten dieses Buches sollte man mit entsprechender Fachliteratur auf jeden Fall zum Ziel gelangen. Die zahlreichen und guten Übungsaufgaben sind ebenfalls ein großer Pluspunkt für dieses Buch, einige davon wird man als Student auch aus seinen ersten Informatik-Vorlesungen kennen. Die Installationsanleitung stellt einen der Schwachpunkte da, ansonsten gibt es aber inhaltlich wenig auszusetzen. Problematisch ist allerdings die Formatierung des Quellcodes im Buch, da dieser nur mit Zeilennummern und unformatiert aus der PDF-Datei herauskopiert werden kann, so dass eine einfache Übertragung in den Editor nicht möglich ist. 
Insgesamt ist es aber bei einem angemessenen Preis ein sehr gutes Buches zum Lernen von Java.

Buchinfo:
Grundkurs Programmieren in Java{http://www.hanser-fachbuch.de/buch/Grundkurs+Programmieren+in+Java/9783446440739}
Dietmar Ratz, Jens Scheffler, Detlef Seese, Jan Wiesenberger
Carl Hanser Verlag, 2014
711 Seiten
978-3-446-42663-4
34,99 € (broschiert) 27,99 € (E-Book)

Autoreninfo: Christian Schnell
ist zwar eher in anderen Programmiersprachen zu Hause, programmiert aber hin und wieder kleinere Programme und Spiele in Java.
